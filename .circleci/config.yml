version: 2.1

jobs:

 build:
   docker:
     - image: circleci/openjdk:8-jdk-browsers
   steps:
     - checkout
     - restore_cache:
         key: encryption-{{ checksum "pom.xml" }}
     - run: mvn clean
     - run: mvn dependency:go-offline
     - save_cache:
         paths:
           - ~/.m2
         key: encryption-{{ checksum "pom.xml" }}
     - run: mvn -P jacoco test
     - run:
         name: Get Artefact Version
         command: |
             echo "export PROJECT_VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)" >> $BASH_ENV
     - run:
         name: Save test results
         command: |
           mkdir -p ~/test-results/junit/
           find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
         when: always
     - store_test_results:
         path: ~/test-results
     - store_artifacts:
         path: ~/test-results/junit
     - store_artifacts:
         path:  target/site/jacoco
     - run: mvn versions:set -DnewVersion="1.0.${CIRCLE_BUILD_NUM}"
     - run: mvn -Dmaven.test.skip=true package
     - store_artifacts:
         path:  target/circleci-test-bench-1.0.0.jar
     - persist_to_workspace:
         root: target
         # Must be relative path from root
         paths:
           - circleci-test-bench-1.0.0.jar

 deploy-to-automated-test:
   docker:
     - image: circleci/openjdk:8-jdk-browsers
   steps:
    - run: echo 'deploying to automated test'

 gather-test-results:
   docker:
     - image: circleci/openjdk:8-jdk-browsers
   steps:
    - run: echo 'gathering test results'

 deploy-to-prod:
   docker:
     - image: circleci/openjdk:8-jdk-browsers
   steps:
    - run: echo 'deploying to prod'

workflows:
 version: 2
 build-deploy-to-test:
   jobs:
     - build
     - deploy-to-automated-test:
         requires:
           - build
     - hold-test-results:
          type: approval
          requires:
           - deploy-to-automated-test
     - hold-deploy-prod:
          type: approval
          requires:
           - deploy-to-automated-test
     - gather-test-results:
         requires:
           - hold-test-results
    #  - deploy-to-prod:
    #      requires:
    #        - hold-deploy-prod
